name: Test Application

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    strategy:
      matrix:
        platform: ['ubuntu-latest']
        node-version: ['12.x']
        postgres-version: ['12-alpine']

    runs-on: ${{ matrix.platform }}

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}

    steps:
      - name: Init
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup PostgresSQL ${{ matrix.postgres-version }}
        uses: Daniel-Marynicz/postgresql-action@master
        with:
          postgres_image_tag: ${{ matrix.postgres-version }}
          postgres_user: ${{ env.DB_USER }}
          postgres_password: ${{ env.DB_PASSWORD }}
          postgres_db: ${{ env.DB_DATABASE }}
          exposed_postgres_port: ${{ env.DB_PORT }}

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ~/.cache/yarn/v6
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --prefer-offline --production=false --fronzen-lockfile

      - name: Create .env
        uses: canastro/copy-file-action@master
        with:
          source: ".env.example"
          target: ".env"

      - name: Eslint Check
        run: yarn eslint

      - name: Run Tests
        run: yarn coverage
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          CI: true

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
